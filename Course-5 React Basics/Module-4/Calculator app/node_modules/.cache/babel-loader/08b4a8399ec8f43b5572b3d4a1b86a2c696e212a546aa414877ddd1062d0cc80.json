{"ast":null,"code":"var _jsxFileName = \"D:\\\\Meta-Front-End-Course\\\\reactlab\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  const [result, setResult] = useState(0);\n  function plus(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n    inputRef.current.focus();\n    inputRef.current.value = null;\n  }\n  ;\n  function minus(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n    inputRef.current.focus();\n    inputRef.current.value = null;\n  }\n  ;\n  function times(e) {\n    e.preventDefault();\n    setResult(result => result * Number(inputRef.current.value));\n    inputRef.current.focus();\n    inputRef.current.value = null;\n  }\n  ;\n  function divide(e) {\n    e.preventDefault();\n    if (inputRef.current.value == 0) {\n      alert(\"Cannot divide by zero\");\n      return;\n    }\n    setResult(result => result / Number(inputRef.current.value));\n    inputRef.current.focus();\n    inputRef.current.value = null;\n  }\n  ;\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.focus();\n    inputRef.current.value = null;\n  }\n  ;\n  function resetResult(e) {\n    e.preventDefault();\n    setResult(0);\n    inputRef.current.focus();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simplest Working Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef,\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: minus,\n        children: \"subtract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: times,\n        children: \"multiply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \"divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetInput,\n        children: \"reset input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetResult,\n        children: \"reset result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iMUG+fAB4x2aPXzcLfNNNKt0TI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","App","_s","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","focus","minus","times","divide","alert","resetInput","resetResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","pattern","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Meta-Front-End-Course/reactlab/src/App.js"],"sourcesContent":["import {\n  useState,\n  useRef\n} from \"react\"; \nimport \"./App.css\";\n\nfunction App() { \n  const inputRef = useRef(null); \n  const resultRef = useRef(null); \n  const [result, setResult] = useState(0); \n \n  function plus(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n            inputRef.current.focus();\n                inputRef.current.value=null;\n\n\n  }; \n \n  function minus(e) {\n    e.preventDefault();\n        setResult((result) => result - Number(inputRef.current.value)); \n                inputRef.current.focus();\n                    inputRef.current.value=null;\n\n\n  };\n \n  function times(e) { \n        e.preventDefault();\n\n    setResult((result) => result * Number(inputRef.current.value)); \n            inputRef.current.focus();\n                inputRef.current.value=null;\n\n\n  }; \n \n  function divide(e) {\n        e.preventDefault();\n        if(inputRef.current.value==0){\n            alert(\"Cannot divide by zero\");\n            return;\n        }\n    setResult((result) => result / Number(inputRef.current.value)); \n            inputRef.current.focus();\n                inputRef.current.value=null;\n\n\n  };\n \n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.focus();\n    inputRef.current.value=null;\n  }; \n \n  function resetResult(e) {\n    e.preventDefault();\n    setResult(0);\n        inputRef.current.focus();\n\n  }; \n \n  return ( \n    <div className=\"App\"> \n      <div> \n        <h1>Simplest Working Calculator</h1> \n      </div> \n      <form> \n        <p ref={resultRef}> \n          {result} \n        </p> \n        <input\n          pattern=\"[0-9]\" \n          ref={inputRef} \n          type=\"number\" \n          placeholder=\"Type a number\" \n        /> \n        <button onClick={plus}>add</button> \n        <button onClick={minus}>subtract</button> \n        <button onClick={times}>multiply</button> \n        <button onClick={divide}>divide</button> \n        <button onClick={resetInput}>reset input</button> \n        <button onClick={resetResult}>reset result</button> \n\n      \n      </form> \n    </div> \n  ); \n} \n \nexport default App; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}